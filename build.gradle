plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1' // Use the latest version
}

group = 'com.henhen1227'
version = '1.1-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.20.2-R0.1-SNAPSHOT"

    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.9'
    implementation group: 'org.java-websocket', name: 'Java-WebSocket', version: '1.5.3'

    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

build {
    dependsOn shadowJar
}

shadowJar {
    archiveBaseName.set("CCCore-${version}")
    archiveClassifier.set('')
    archiveVersion.set('')
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
}


tasks.register('deployPlugin', Copy) {
    dependsOn shadowJar  // or 'build' if you're using the standard build task

    from shadowJar.archiveFile  // or 'build/libs' if you're using the standard build task
    into '/Users/henryabrahamsen/Desktop/TestMinecraftServer/plugins/'

    // Rename the JAR file during the copy if necessary
    rename { String fileName ->
        fileName.replace("CCCore-$version", "CCCore-1.1-SNAPSHOT")
    }

    doFirst {
        println "Building and deploying CCCore v$version..."
    }
    doLast {
        println "CCCore v$version deployed successfully!"
    }
}